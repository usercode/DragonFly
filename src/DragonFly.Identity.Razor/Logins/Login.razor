@page "/login"
@inject HttpClient HttpClient
@inject AuthenticationStateProvider Auth
@inject NavigationManager NavigationManager
@inject ILoginService LoginService
@inject IOptions<GeneralOptions> Options

<div style="display:flex; flex: 1; justify-content:center">
        <div class="form-signin" style="width: 100%; max-width: 330px; padding: 15px; margin: auto;">       
            <h1 class="h3 mb-3 font-weight-normal">@Options.Value.Name</h1>
        
            <div class="form-floating mb-3">
              <input @bind-value="Username" type="email" class="form-control" id="floatingInput" placeholder="Username">
              <label for="floatingInput">Username</label>
            </div>
            <div class="form-floating">
              <input @bind-value="Password" type="password" class="form-control" id="floatingPassword" placeholder="Password">
              <label for="floatingPassword">Password</label>
            </div>
        
            <button class="btn btn-lg btn-primary btn-block mt-3" @onclick="x => LoginAsync()">Login</button>
            <p class="mt-5 mb-3 text-muted">© @DateTime.Now.Year</p>

        </div>
</div>

@code {

    [Parameter]
    public string Username { get; set; }

    [Parameter]
    public string Password { get; set; }

    protected override async Task OnInitializedAsync()
    {
        //var r = await HttpClient.GetAsync("api/Login/IsLoggedIn");

        //if (r.IsSuccessStatusCode == false)
        //{
        //    NavigationManager.NavigateTo("/");

        //    return;
        //}

        #if DEBUG
        Username = DefaultSecurity.DefaultUsername;
        Password = DefaultSecurity.DefaultPassword;
        #endif
    }

    public async Task LoginAsync()
    {
        bool result = await LoginService.LoginAsync(Username, Password, true);

        if (result)
        {
            ((ApiAuthenticationStateProvider)Auth).MarkUserAsAuthenticated("Test");

            NavigationManager.NavigateTo("./");
        }
        else
        {
            throw new Exception("Login failed.");
        }
    }
}
