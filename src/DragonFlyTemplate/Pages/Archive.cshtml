@page
@inject IDataStorage Storage

@{
    var queryResult = await Storage.QueryAsync(new ContentItemQuery());

    await Storage.CreateAsync<BlogEntryModel>();

}

<div class="container archive">
    @*@if (Model.Archive.Category != null) {
        <div class="row">
            <div class="col blog-filter-header">
                <h1>Category: @Model.Archive.Category.Title</h1>
            </div>
        </div>
    } else if (Model.Archive.Tag != null) {
        <div class="row">
            <div class="col blog-filter-header">
                <h1>Tag: @Model.Archive.Tag.Title</h1>
            </div>
        </div>
    } else if (Model.Archive.Year.HasValue) {
        <div class="row">
            <div class="col blog-filter-header">
                <h1>Posts from @MonthName() @Model.Archive.Year</h1>
            </div>
        </div>
    } else {
       
    }*@

    @foreach (ContentItem post in queryResult.Items)
    {
        <article>
            <header>
                <div class="row">
                    @*<div class="col-lg-4">
                        @if (post.PrimaryImage.HasValue)
                        {
                        <div class="image-wrapper">
                            @if (post.PrimaryImage.Media.ContentType == MimeTypes.Svg)
                            {
                                <a href="@post.Permalink"><img class="image" src="@Url.ImageWizard().Fetch(post.PrimaryImage).BuildUrl()"></a>
                            }
                            else
                            {
                                <a href="@post.Permalink"><img class="image" src="@Url.ImageWizard().Fetch(post.PrimaryImage).Resize(930, 360).BuildUrl()"></a>
                            }
                        </div>
                        }
                    </div>*@
                    <div class="col-lg-12">
                        <h2><a href="@post.GetSlug("Slug")">@post.GetString("Title")</a></h2>
                        <p class="post-meta">
                            <strong>In</strong> <a href="@Model.Data.Permalink/category/@post.Category.Slug">@post.Category.Title</a>
                            <span class="sep">&#9670;</span>
                            <strong>Tags</strong>
                            @foreach (var tag in post.Tags)
                            {
                                <span class="tag"><a href="@Model.Data.Permalink/tag/@tag.Slug">#@tag.Title</a></span>
                            }
                            <span class="sep">&#9670;</span>
                            <strong>Published</strong>
                            @post.Published.Value.ToString("yyyy-MM-dd")
                        </p>
                        <p>@Html.Raw(post.Excerpt)</p>
                        <p><a class="btn btn-link" href="@post.Permalink">Mehr</a></p>
                    </div>
                </div>
            </header>
         
          
        </article>
    }
    @if (queryResult.TotalCount > 1) {
        <div class="row">
            <div class="col">
                <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-center">
                    <li class="page-item">
                        <a class="page-link" href="/page/1">
                            <span aria-hidden="true">&laquo;</span>
                            <span class="sr-only">Previous</span>
                        </a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="/page/@Math.Max(1, Model.Archive.CurrentPage - 1)">
                            <span aria-hidden="true">&lsaquo;</span>
                            <span class="sr-only">Previous</span>
                        </a>
                    </li>
                    @for (var n = 1; n <= Model.Archive.TotalPages; n++) {
                        <li class="page-item @(Model.Archive.CurrentPage == n ? "active" : "")"><a class="page-link" href="/page/@n">@n</a></li>
                    }
                    <li class="page-item">
                        <a class="page-link" href="/page/@Math.Min(Model.Archive.TotalPages, Model.Archive.CurrentPage + 1)">
                            <span aria-hidden="true">&rsaquo;</span>
                            <span class="sr-only">Next</span>
                        </a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="/page/@Model.Archive.TotalPages">
                            <span aria-hidden="true">&raquo;</span>
                            <span class="sr-only">Next</span>
                        </a>
                    </li>
                </ul>
                </nav>
            </div>
        </div>
    }
</div>
