@inject FieldComponentManager FieldComponentManager

<a class="btn btn-light" @onclick="()=> ShowModalDialog = true"><i class="fas fa-plus"></i> Add Field</a>

<ModalWindow Show="ShowModalDialog" Closed="ItemAdded">
    <ContentFieldSelector @ref="Selector">

    </ContentFieldSelector>
</ModalWindow>

<BSListGroup>
    @foreach (var field in Schema.Fields.OrderBy(x => x.Value.SortKey))
    {
        <ContentFieldItemView Key="@field.Key" Field="@field.Value" Schema="@Schema" />
    }
</BSListGroup>

@code {
    [Parameter]
    public IContentSchema Schema { get; set; }

    [Parameter]
    public string OptionIdSuffix { get; set; } = "option";

    bool IsOpen { get; set; }

    public ContentFieldSelector Selector { get; set; }

    public bool ShowModalDialog { get; set; }

    protected void ItemAdded(object sender, bool result)
    {
        if (result)
        {
            ContentField defaultInstance = ContentFieldManager.Default.CreateField(Selector.ContentFieldType);

            Schema.Fields.Add(Selector.Name, new ContentFieldDefinition()
            {
                FieldType = Selector.ContentFieldType.Name,
                Options = defaultInstance.CreateOptions()
            });

            ShowModalDialog = false;

            StateHasChanged();
        }
    }
}
