@inject ComponentManager FieldComponentManager

@foreach (var part in Schema.Fields
           .OrderBy(x => x.Value.SortKey)
           .Select(x => new { FieldName = x.Key, ContentField = Content.Fields[x.Key], SchemaField = x.Value })
           .ToList())
{
    <BSFormGroup>
        <BSAlert Color="GetFieldColor(part.FieldName)">
            <BSRow>
                <BSLabel class="col-sm-2 col-form-label">
                    @part.FieldName
                </BSLabel>
                <div class="col-sm-10">
                    @FieldComponentManager.CreateComponent(part.ContentField, part.SchemaField.Options)
                </div>
            </BSRow>
        </BSAlert>
    </BSFormGroup>
}

@code {
    [Parameter]
    public IContentElement Content { get; set; }

    [Parameter]
    public ISchemaElement Schema { get; set; }

    [CascadingParameter]
    public ContentItemDetail Detail { get; set; }

    private Color GetFieldColor(string field)
    {
        bool valid = Detail.IsFieldValid(field);

        if (valid)
        {
            return Color.None;
        }
        else
        {
            return Color.Danger;
        }
    }
}