@inject ComponentManager FieldComponentManager

@foreach (var part in Schema.Fields
           .OrderBy(x => x.Value.SortKey)
           .Select(x => new { FieldName = x.Key, ContentField = Content.Fields[x.Key], SchemaField = x.Value })
           .ToList())
{
        <BSAlert Color="GetFieldColor(part.FieldName)">
            <div class="form-group">
                <BSRow>
                    <BSCol Column="2">
                        <BSLabel class="field-label">
                    @part.FieldName
                </BSLabel>
                    </BSCol>
                    <BSCol Column="10">
                         <div class="field">
                            @FieldComponentManager.CreateComponent(part.ContentField, part.SchemaField.Options)
                        </div>
                    </BSCol>
                </BSRow>
            </div>
        </BSAlert>
}

@code {
    [Parameter]
    public IContentElement Content { get; set; }

    [Parameter]
    public ISchemaElement Schema { get; set; }

    [CascadingParameter]
    public ContentItemDetail Detail { get; set; }

    private BSColor GetFieldColor(string field)
    {
        bool valid = Detail.IsFieldValid(field);

        if (valid)
        {
            return BSColor.Default;
        }
        else
        {
            return BSColor.Danger;
        }
    }
}