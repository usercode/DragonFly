@inject NavigationManager NavigationManager
@inject IImageAssetUrlService AssetPreview

@if (_init)
{
    <BSModal IsFullScreen="true" IsOpen="true" DisableAnimations="true" Style="display:block">
        <BSModalHeader OnClick="() => _init = false">Select asset</BSModalHeader>
        <BSModalBody>
            <AssetList ItemSelected="ItemAdded" ListMode="EntityListMode.Single" />       
        </BSModalBody>
        <BSModalFooter>
            <BSButton Color="Color.Primary" @onclick="() => _init = false">Ok</BSButton>
        </BSModalFooter>
    </BSModal>
}

<div class="asset-selector">
    <BSListGroup>
        <BSListGroupItem>
            <div style="display:flex;justify-content:space-between;align-items:center"> 
                @if (Asset != null)
                {
                    <a href="asset/@Asset.Id" class="link-dark"><span>@Asset.Name (@Asset.MimeType)</span></a>
                }
                else
                {
                    <span></span>
                }

                <div>
                    @if (Asset != null)
                    {
                        <BSButton Color="Color.Light" OnClick="e => Navigate()" title="Navigate"><i class="fas fa-arrow-right"></i></BSButton>
                        @if (ShowDownloadButton)
                        {
                            <BSButton Color="Color.Light" href="@Asset.GetDataUrl()" target="_blank" title="Download"><i class="fas fa-arrow-down"></i></BSButton>
                        }
                        <BSButton Color="Color.Light" OnClick="e => RemoveItem()" title="Remove"><i class="fas fa-times"></i></BSButton>               
                    }
                        <BSButton Color="Color.Light" OnClick="e => OpenModal()" title="Select"><i class="fas fa-plus"></i></BSButton>
                </div>           
            </div>

            @if (Asset != null && ShowPreview)
            {
                <div class="image" style="margin-top:1rem">
                    @if (Asset.IsImage())
                    {
                        <img src="@AssetPreview.Resize(Asset, 400, 150)" />
                    }
                    else if (Asset.IsPdf())
                    {
                        <img src="@AssetPreview.Pdf(Asset, 400, 150)" />
                    }
                </div>              
            }
        </BSListGroupItem>
    </BSListGroup>
</div>

@code {
    private Asset _asset;

    [Parameter]
    public Asset Asset 
    {
        get => _asset;
        set
        {
            _asset = value;

            AssetChanged?.Invoke(_asset);
        }
    }

    [Parameter]
    public Action<Asset> AssetChanged { get; set; }

    [Parameter]
    public bool ShowDownloadButton { get; set; }

    [Parameter]
    public bool ShowPreview { get; set;  }

    private bool _init = false;

    protected void Navigate()
    {
        NavigationManager.NavigateTo($"asset/{Asset.Id}");
    }

    protected void RemoveItem()
    {
        Asset = null;
    }

    public void OpenModal()
    {
        //LiveDemo.Show();
        _init = true;
    }

    public void ItemAdded(Asset asset)
    {
        Asset = asset;

        _init = false;

        StateHasChanged();
    }
}
