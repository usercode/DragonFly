@inject NavigationManager NavigationManager

@if (_init)
{
    <BSModal IsFullScreen="true" IsOpen="true" DisableAnimations="true" Style="display:block">
        <BSModalHeader OnClick="() => _init = false">Select asset</BSModalHeader>
        <BSModalBody>
            <ContentItemTypeList2 Closed="(a, x) => { if (x == true) ItemAdded((ContentItemTypeList2)a); }"></ContentItemTypeList2>
        </BSModalBody>
        <BSModalFooter>
            <BSButton Color="Color.Primary" @onclick="() => _init = false">Ok</BSButton>
        </BSModalFooter>
    </BSModal>
}

    <div class="reference-selector">
        <BSListGroup>
            <BSListGroupItem>
                <div style="display: flex; align-items: center; justify-content: space-between;">
                  
                    @if (ContentItem != null)
                    {
                        <span class="badge bg-primary">@ContentItem.Schema.Name</span>

                        @foreach (string field in ContentItem.Schema.ReferenceFields)
                        {
                            if (ContentItem.TryGetField(field, out ContentField column))
                            {
                                @if (column is ISingleValueContentField singleValueField)
                                {
                                    <span>@singleValueField.Value</span>
                                }
                                else if (column is AssetField assetField)
                                {
                                    @if (assetField.Asset != null && assetField.Asset.IsImage())
                                    {
                                        <img src="@assetField.Asset.PreviewUrl" style="height:2rem;object-fit:contain" />
                                    }
                                }
                            }
                        }
                    }
                    else
                    {
                      <span>...</span>
                    }

                    <div>
                        @if (ContentItem != null)
                        {
                            <BSButton Color="Color.Light" OnClick="e => Navigate()" title="Navigate"><i class="fas fa-arrow-right"></i></BSButton>                        
                            <BSButton Color="Color.Light" OnClick="e => RemoveItem()" title="Remove"><i class="fas fa-times"></i></BSButton>
                        }
                        <BSButton Color="Color.Light" OnClick="e => OpenModal()" title="Select"><i class="fas fa-plus"></i></BSButton>
                    </div>
                </div>
            </BSListGroupItem>
        </BSListGroup>
    </div>

@code {

    private ContentItem _contentItem;

    [Parameter]
    public ContentItem ContentItem 
    {
        get => _contentItem;
        set
        {
            _contentItem = value;

            ContentItemChanged?.Invoke(_contentItem);
        }
    }

    [Parameter]
    public Action<ContentItem> ContentItemChanged { get; set; }

    private bool _init = false;

    protected void Navigate()
    {
        NavigationManager.NavigateTo($"content/{ContentItem.Schema.Name}/{ContentItem.Id}");
    }

    protected void RemoveItem()
    {
        ContentItem = null;
    }

    public void OpenModal()
    {
        _init = true;
    }

    public void ItemAdded(ContentItemTypeList2 sender)
    {
        ContentItem = sender.SelectedContentItem;

        _init = false;

        StateHasChanged();
    }
}
