@inject ComponentManager ComponentManager
@inject BlockFieldManager BlockFieldManager

<BSOffCanvas @ref="_offCanvas" Placement="Placement.Right">
    <Header>Select block</Header>
    <Content>
        @foreach (BlockFactory block in BlockFieldManager.GetAllBlocks())
        {
            <div>
                <BSButton Color="BSColor.Light" OnClick="e => Add(block)" style="width: 100%;text-align:left;margin-bottom:0.5rem"><i class="@block.CssIcon" style="margin-right: 0.5rem;" />@block.BlockName</BSButton>
            </div>
        }
    </Content>
</BSOffCanvas>

@if (Blocks != null)
{
	<div class="block-field-view">
        <div style="display: flex;gap:0.25rem">
            <BSButton Color="BSColor.Light" class="block-field-add-btn" OnClick="e => BlockClipboard.CopyAsync(Blocks)" title="Copy all"><i class="fa-solid fa-copy"></i></BSButton>
            <BSButton Color="BSColor.Light" class="block-field-add-btn" OnClick="e => BlockClipboard.PasteAsync(0, Blocks)" title="Paste" style="flex:0"><i class="fa-solid fa-paste"></i></BSButton>            
		    <BSButton Color="BSColor.Light" class="block-field-add-btn" OnClick="e => OpenModal(0)" title="Insert block" style="flex:1"><i class="fas fa-plus"></i></BSButton>
        </div>

		@for (int i = 0; i < Blocks.Count; i++)
		{
			int curIndex = i;
            Block block = Blocks[curIndex];

			<div class="block-field">
				<div class="block-field-options">
                    <span class="block-label"><i class="@block.CssIcon" style="margin-right: 0.5rem;" />@block.Name</span>
					<BSButton Color="BSColor.Light" OnClick="e => Blocks.MoveUp(block)" title="Up"><i class="fas fa-arrow-up"></i></BSButton>
                    <BSButton Color="BSColor.Light" OnClick="e => Blocks.MoveDown(block)" title="Down"><i class="fas fa-arrow-down"></i></BSButton>
                    <BSButton Color="BSColor.Light" OnClick="e => Blocks.Remove(block)" title="Remove"><i class="fa-solid fa-times"></i></BSButton>
                    <BSButton Color="BSColor.Light" OnClick="e => BlockClipboard.CopyAsync(new[] { block })" title="Copy"><i class="fa-solid fa-copy"></i></BSButton>
				</div>
				<div class="block-field-content">
                    @ComponentManager.CreateComponent(block)
				</div>
			</div>

            <div style="display: flex;gap:0.25rem">
                <BSButton Color="BSColor.Light" class="block-field-add-btn" OnClick="e => BlockClipboard.PasteAsync(curIndex + 1, Blocks)" title="Paste" style="flex:0"><i class="fa-solid fa-paste"></i></BSButton>

                <BSButton Color="BSColor.Light" class="block-field-add-btn" OnClick="e => OpenModal(curIndex + 1)" title="Insert block" style="flex:1">
                    <i class="fas fa-plus"></i>
                </BSButton>
            </div>
		}
	</div>
}

@code {

    private BSOffCanvas? _offCanvas;

    public int Position { get; set; }

    public BSModal Modal { get; set; }

    [Parameter]
    public IList<Block> Blocks { get; set; }

    public async Task OpenModal(int position)
    {
        Position = position;

        //await Modal.ShowAsync();

        await _offCanvas.ToggleAsync();
    }

    private async Task Add(BlockFactory factory)
    {
        //await Modal.HideAsync();

        await _offCanvas.ToggleAsync();

        Blocks.Insert(Position, factory.CreateBlock());
    }
}
