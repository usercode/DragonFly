@inject ComponentManager ComponentManager
@inject BlockFieldManager BlockFieldManager

<BSModal @ref="Modal" IsFullScreen="true" Size="Size.ExtraLarge">
	<Header>Select asset</Header>
	<Content>
		@foreach (Block block in BlockFieldManager.GetAllBlocks())
		{
			<div>
				<BSButton class="btn btn-light" OnClick="e => Add(block)">@block.GetType().Name</BSButton>
			</div>
		}
	</Content>
	<Footer>
		<BSButton Color="BSColor.Primary" @onclick="@(() => Modal.HideAsync())">Ok</BSButton>
	</Footer>
</BSModal>

@if (Blocks != null)
{
	<div class="block-field-view">
		<BSButton Color="BSColor.Light" class="block-field-add-btn" OnClick="e => OpenModal(0)" title="Insert block">
			<i class="fas fa-plus"></i>
		</BSButton>

		@for (int i = 0; i < Blocks.Count; i++)
		{
			int curIndex = i;

            if (Blocks[i] == null)
            {
                continue;
            }

			<div class="block-field">
				<div class="block-field-options">
					<span class="badge bg-secondary">@Blocks[curIndex].GetType().Name</span>
					<BSButton Color="BSColor.Light" OnClick="@(e => { Blocks.MoveUp(Blocks[curIndex]); })" title="Up"><i class="fas fa-arrow-up"></i></BSButton>
					<BSButton Color="BSColor.Light" OnClick="@(e => { Blocks.MoveDown(Blocks[curIndex]); })" title="Down"><i class="fas fa-arrow-down"></i></BSButton>
					<BSButton Color="BSColor.Light" OnClick="@(e => { Blocks.Remove(Blocks[curIndex]); })" title="Remove"><i class="fas fa-times"></i></BSButton>
				</div>
				<div class="block-field-content">
					@ComponentManager.CreateComponent(Blocks[curIndex])
				</div>
			</div>

			<BSButton Color="BSColor.Light" class="block-field-add-btn" OnClick="e => OpenModal(curIndex + 1)" title="Insert block">
				<i class="fas fa-plus"></i>
			</BSButton>
		}
	</div>
}

@code {

	public int Position { get; set; }

	public BSModal Modal { get; set; }

	[Parameter]
	public IList<Block> Blocks { get; set; }

	public async Task OpenModal(int position)
	{
		Position = position;

		await Modal.ShowAsync();
	}

	private async Task Add(Block element)
	{
		await Modal.HideAsync();

		Blocks.Insert(Position, element);
	}
}
