@using DragonFly.Assets.Query;
@inject IAssetFolderStorage Storage

<div style="margin: 0.25rem">
    <BSButton Color="BSColor.Light" OnClick="async x => await LoadSubFolderAsync()">
        @if (IsExpanded)
        {
            <i class="fa-solid fa-folder-open"></i>
        }
        else
        {
            <i class="fa-solid fa-folder"></i>
        }
    </BSButton>
    <BSButton Color="BSColor.Light" OnClick="x => OnFolderClicked?.Invoke(Folder)">
        @Folder.Name
    </BSButton>
</div>
@if (IsExpanded)
{
    <div style="margin-left:2rem">
        @foreach (var item in Childs)
        {
            <AssetFolderView Folder="item" OnFolderClicked="OnFolderClicked" />
        }
    </div>
}

@code {
    [Parameter]
    public AssetFolder Folder { get; set; }

    public IEnumerable<AssetFolder> Childs { get; set; } = Enumerable.Empty<AssetFolder>();

    public bool IsExpanded { get; set; }

    [Parameter]
    public Action<AssetFolder> OnFolderClicked { get; set; }

    protected async Task LoadSubFolderAsync()
    {
        IsExpanded = !IsExpanded;

        if (IsExpanded)
        {
            Childs = await Storage.QueryAsync(new AssetFolderQuery() { Parent = Folder?.Id });
        }
    }
}
