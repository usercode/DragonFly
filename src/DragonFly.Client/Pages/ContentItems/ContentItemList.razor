@page "/content/{SchemaName}"
@inherits EntityListComponent<ContentItem>
@rendermode DragonFlyRenderMode.Current

<div class="content-header">
    @if (ListMode == EntityListMode.Default)
    {
        <Toolbar Items="ToolbarItems" />
    }

    <div style="display:flex; gap: 0.25rem;">
        <MudTextField Style="flex:1;"
        Placeholder="Search"
        Adornment="Adornment.Start"
        AdornmentIcon="@Icons.Material.Filled.Search"
        Variant="Variant.Outlined"
        Value="@SearchPattern"
        Clearable="true"
        @onchange="async (x) => { Page = 0; SearchPattern = x.Value.ToString(); await NavigateAsync(); }" />
    </div>
</div>
<div class="scroll-content">
    <div class="row">
        <div class="col-auto">
            <QuerySelector ContentItemList="@this" />
        </div>
        <div class="col">
            @if (SearchResult == null)
            {
                <div class="spinner-border" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            }
            else
            {
                <MudTable T="ContentItem"
                Items="SearchResult.Items"
                Hover="true"
                OnRowClick="@(x => Navigation.NavigateTo($"content/{x.Item.Schema.Name}/{x.Item.Id}"))">
                    <HeaderContent>

                        <MudTh>Published</MudTh>
                        @foreach (var field in Schema.GetListFields())
                        {
                            <MudTh>@field.Key</MudTh>
                        }
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd>
                        @if (context.PublishedAt != null)
                        {
                            <MudIconButton Icon="@Icons.Material.Filled.Check" />
                        }
                        </MudTd>
                        @foreach (var field in Schema.GetListFields())
                        {
                            var content = context.Fields[field.Key];

                            <MudTd>
                                @if (content is AssetField assetField)
                                {
                                    <img src="@assetField.Asset.PreviewUrl" style="height:50px" />
                                }
                                else if (content is ReferenceField referenceField && referenceField.ContentItem != null)
                                {
                                    <MudTd>
                                        <ReferenceFields ContentItem="@referenceField.ContentItem" />
                                    </MudTd>
                                }
                                else if (content is BoolField boolField)
                                {
                                    if (boolField.Value == true)
                                    {
                                        <MudIcon Icon="@Icons.Material.Filled.Check" />
                                    }
                                }
                                else
                                {
                                    <span>@content</span>
                                }
                            </MudTd>
                        }
                    </RowTemplate>
                </MudTable>
            }
        </div>
    </div>
</div>
<div>
    @if (SearchResult != null)
    {
        <BSPagination>
            <BSPaginationItem Href="#" PaginationLinkType="PaginationLinkType.PreviousIcon" />
            @for (int i = 0; i < CountPages; i++)
            {
                int i2 = i;

                <BSPaginationItem PaginationLinkType="PaginationLinkType.Custom" @onclick="x => Page = i2">@(i2 + 1)</BSPaginationItem>
            }

            <BSPaginationItem Href="#" PaginationLinkType="PaginationLinkType.NextIcon" />

        </BSPagination>
    }
</div>
