@inject ComponentManager FieldComponentManager

@if (ContentItemList.Schema != null)
{
    <h4 class="query-title">Order</h4>

    <FluentAccordion>
        <FluentAccordionItem Heading="Order" Expanded="true">
            @foreach (FieldOrder field in ContentItemList.OrderFields)
            {
                <BSListGroupItem style="display:flex;align-items:center">
                    <span>@field.Name</span>
                    <div style="flex-grow:1"></div>

                    <OrderDirection Order="field" />
                    <FluentButton IconStart="@(new Icons.Regular.Size16.ArrowUp())" OnClick="x => ContentItemList.OrderFields.MoveUp(field)" Title="Up" />
                    <FluentButton IconStart="@(new Icons.Regular.Size16.ArrowDown())" OnClick="x => ContentItemList.OrderFields.MoveDown(field)" Title="Down" />
                    <FluentButton IconStart="@(new Icons.Regular.Size16.Delete())" OnClick="x => ContentItemList.OrderFields.Remove(field)" Title="Remove" />
                </BSListGroupItem>
            }
            <FluentMenuButton Text="Add field">
                @foreach (var field in GetUnsedOrderFields())
                {
                    <FluentMenuItem Id="@field.Key" OnClick="x => ContentItemList.OrderFields.Add(new FieldOrder(field.Key, true))">@field.Key</FluentMenuItem>
                }
            </FluentMenuButton>
        </FluentAccordionItem>
    </FluentAccordion>    

    <h4 class="query-title">Filter</h4>

    <FluentAccordion>
        @foreach (var fieldQuery in ContentItemList.QueryFields)
        {
            <FluentAccordionItem Heading="@fieldQuery.FieldName" Expanded="true">
                @FieldComponentManager.CreateComponent(fieldQuery)
            </FluentAccordionItem>
        }
    </FluentAccordion>
}

@code {
    [Parameter]
    public ContentItemList ContentItemList { get; set; }

    [Parameter]
    public ISchemaElement Schema { get; set; }

    private IDictionary<string, SchemaField> GetUnsedOrderFields()
    {
        return ContentItemList.Schema.Fields
                                          .Where(x => x.Value.Options?.HasIndex == true)
                                          .Where(f => ContentItemList.OrderFields.Any(a => a.Name == f.Key) == false)
                                          .ToDictionary();
    }
}