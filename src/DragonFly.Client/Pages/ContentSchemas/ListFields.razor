<div class="row">
    <div class="col-lg-6">
        <MudList T="string">
            @foreach (string item in TargetList)
            {
                <MudListItem Text="@item">
                    <div style="display:flex;align-items:center">
                        <span>@item</span>
                        <span style="flex-grow:1"></span>
                        <MudButton OnClick="e => TargetList.MoveUp(item)" StartIcon="@Icons.Material.Filled.ArrowUpward" />
                        <MudButton OnClick="e => TargetList.MoveDown(item)" StartIcon="@Icons.Material.Filled.ArrowDownward" />
                        <MudButton OnClick="e => TargetList.Remove(item)" StartIcon="@Icons.Material.Filled.Delete" />
                    </div>
                </MudListItem>
            }
        </MudList>
    </div>
    <div class="col-lg-6">
        <MudSelect
                   Placeholder="Add indexed field"
                   @bind-Value="SelectedValue">
            @foreach (var item in SchemaFields
                                        .Where(x => x.Value.Options.HasIndex)
                                        .Where(x => TargetList.Contains(x.Key) == false)
                                        .ToArray())
            {
                <MudSelectItem Value="@item.Key">@item.Key</MudSelectItem>
            }
        </MudSelect>
    </div>
</div>

@code {

    [Parameter]
    public IList<string> TargetList { get; set; }

    [Parameter]
    public SchemaFields SchemaFields { get; set; }

    private string _selectedValue;

    public string SelectedValue
    {
        get => _selectedValue;
        set
        {
            if (_selectedValue != value)
            {
                _selectedValue = value;

                if (_selectedValue != null)
                {
                    TargetList.Add(_selectedValue);
                }
            }
        }
    }
}