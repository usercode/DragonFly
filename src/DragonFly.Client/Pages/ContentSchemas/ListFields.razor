<div class="row">
    <div class="col-lg-6">
        <BSListGroup>
            @foreach (string i in TargetList)
            {
                <BSListGroupItem>
                    <div style="display:flex;align-items:center">
                        <span>@i</span>
                        <span style="flex-grow:1"></span>
                        <FluentButton OnClick="e => TargetList.MoveUp(i)"><i class="fas fa-arrow-up"></i></FluentButton>
                        <FluentButton OnClick="e => TargetList.MoveDown(i)"><i class="fas fa-arrow-down"></i></FluentButton>
                        <FluentButton OnClick="e => TargetList.Remove(i)"><i class="fas fa-times"></i></FluentButton>
                    </div>
                </BSListGroupItem>
            }
        </BSListGroup>
    </div>
    <div class="col-lg-6">
        <FluentSelect TOption="Option<string>"
                      Placeholder="Add indexed field"
                      Items="SchemaFields
                                        .Where(x => x.Value.Options.HasIndex)
                                        .Where(x => TargetList.Contains(x.Key) == false)
                                        .Select(x => new Option<string>() { Text = x.Key, Value = x.Key})
                                        .ToArray()"
                      OptionText="x => x.Text"
                      OptionValue="x => x.Value"
                      @bind-SelectedOption="SelectedValue">
        </FluentSelect>
    </div>
</div>

@code {

    [Parameter]
    public IList<string> TargetList { get; set; }

    [Parameter]
    public SchemaFields SchemaFields { get; set; }

    private Option<string> _selectedValue;

    public Option<string> SelectedValue
    {
        get => _selectedValue;
        set
        {
            if (_selectedValue != value)
            {
                _selectedValue = value;

                if (_selectedValue != null)
                {
                    TargetList.Add(_selectedValue.Value);
                }
            }
        }
    }
}