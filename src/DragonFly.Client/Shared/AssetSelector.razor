@inject NavigationManager NavigationManager


    <BSModal @ref="Modal" IsFullScreen="true" IsScrollable="true" IsCentered="true" Size="Size.ExtraLarge">
        <Header>Select asset</Header>
        <Content>
            <AssetList ItemSelected="ItemAdded" ListMode="EntityListMode.Single" />
        </Content>
        <Footer>
            <BSButton Color="BSColor.Primary" @onclick="() => Modal.HideAsync()">Ok</BSButton>
        </Footer>
    </BSModal>

<div class="asset-selector">
    <BSListGroup>
        <BSListGroupItem>            
            <div style="display:flex;justify-content:space-between;align-items:center"> 
                @if (Asset != null)
                {
                    <a href="asset/@Asset.Id" class="link-dark">
                        <span style="overflow-wrap: anywhere;">@Asset.Name (@Asset.MimeType)</span>
                    </a>
                }
                else
                {
                    <span></span>
                }

                <div class="options">
                    @if (Asset != null)
                    {
                        <BSButton Color="BSColor.Light" OnClick="e => Navigate()" title="Navigate"><i class="fas fa-arrow-right"></i></BSButton>
                        @if (ShowDownloadButton)
                        {
                            <BSButton Color="BSColor.Light" href="@Asset.GetPublicUrl()" target="_blank" title="Download"><i class="fas fa-arrow-down"></i></BSButton>
                        }
                        <BSButton Color="BSColor.Light" OnClick="e => RemoveItem()" title="Remove"><i class="fas fa-times"></i></BSButton>               
                    }
                        <BSButton Color="BSColor.Light" OnClick="e => OpenModal()" title="Select"><i class="fas fa-plus"></i></BSButton>
                </div>           
            </div>

            @if (Asset != null && ShowPreview)
            {
                <div class="image" style="margin-top:1rem">
                    @if (string.IsNullOrEmpty(Asset.PreviewUrl) == false)
                    {
                        @if(Asset.IsSVG())
                        {
                            <img src="@Asset.PreviewUrl" style="width:100%" />
                        }
                        else
                        {
                            <img src="@Asset.PreviewUrl" style="max-height: 400px" />
                        }                        
                    }
                </div>              
            }
        </BSListGroupItem>
    </BSListGroup>
</div>

@code {

    public BSModal Modal { get; set; }

    private Asset _asset;

    [Parameter]
    public Asset Asset 
    {
        get => _asset;
        set
        {
            if (_asset != value)
            {
                _asset = value;

                AssetChanged?.Invoke(_asset);
            }
        }
    }

    [Parameter]
    public Action<Asset> AssetChanged { get; set; }

    [Parameter]
    public bool ShowDownloadButton { get; set; }

    [Parameter]
    public bool ShowPreview { get; set;  }

    protected void Navigate()
    {
        NavigationManager.NavigateToAsset(Asset);
    }

    protected void RemoveItem()
    {
        Asset = null;
    }

    public async void OpenModal()
    {
        await Modal.ShowAsync();
    }

    public async void ItemAdded(Asset asset)
    {
        Asset = asset;

        await Modal.HideAsync();

        StateHasChanged();
    }
}
